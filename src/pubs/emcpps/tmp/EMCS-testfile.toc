\contentsline {chapter}{{Foreword}}{ix}%
\contentsline {chapter}{{Preface}}{xi}%
\contentsline {chapter}{{Acknowledgments}}{xv}%
\contentsline {chapter}{{About the Authors}}{xvii}%
\contentsline {chapter}{\numberline {Chapter\nobreakspace {}0}{Introduction}}{1}%
\contentsline {section}{What Makes This Book Different}{1}%
\contentsline {section}{Scope for the First Edition}{2}%
\contentsline {section}{The {\sffamily \itshape EMC++S} White Paper}{3}%
\contentsline {subsection}{Facts (Not Opinions)}{3}%
\contentsline {subsection}{Elucidation (Not Prescription)}{3}%
\contentsline {subsection}{Brevity (Not Verbosity)}{4}%
\contentsline {subsection}{Real-World (Not Contrived) Examples}{4}%
\contentsline {subsection}{At Scale (Not Overly Simplistic) Programs}{4}%
\contentsline {section}{What Do We Mean by {\sffamily \itshape Safely}?}{5}%
\contentsline {section}{A {\sffamily \itshape Safe} Feature}{5}%
\contentsline {section}{A {\sffamily \itshape Conditionally Safe} Feature}{6}%
\contentsline {section}{An {\sffamily \itshape Unsafe} Feature}{6}%
\contentsline {section}{Modern C++ Feature Catalog}{6}%
\contentsline {subsection}{Organization}{6}%
\contentsline {section}{How To Use This Book}{7}%
\contentsline {chapter}{\numberline {Chapter\nobreakspace {}1}{Safe Features}}{9}%
\contentsline {section}{\numberline {1.1}C++11}{9}
\renewcommand *\cftsecindent {4.5em}
\contentsline {section}{Attributes\hspace *{1em}(Long Title)}{10}%
\contentsline {subsection}{Description}{10}%
\contentsline {subsubsection}{C++ attribute syntax}{10}%
\contentsline {subsubsection}{C++ attribute placement}{11}%
\contentsline {subsubsection}{Common compiler-dependent attributes}{12}%
\contentsline {subsection}{Use Cases}{13}%
\contentsline {subsubsection}{Eliciting useful compiler diagnostics}{13}%
\contentsline {subsubsection}{Hinting at additional optimization opportunities}{14}%
\contentsline {subsubsection}{Delineating explicit assumptions in code to achieve better optimizations}{14}%
\contentsline {subsubsection}{Using attributes to control external static analysis}{15}%
\contentsline {subsubsection}{Creating new attributes to express semantic properties}{16}%
\contentsline {subsubsection}{Probing where attributes are permitted in the compilerâ€™s C++ grammar}{17}%
\contentsline {subsection}{Potential Pitfalls}{17}%
\contentsline {subsubsection}{Unrecognized attributes have implementation-defined behavior}{17}%
\contentsline {subsubsection}{Some attributes, if misused, can affect program correctness}{18}%
\contentsline {subsubsection}{Not every syntactic location is viable for an attribute}{18}%
\contentsline {subsection}{Annoyances}{19}%
\contentsline {subsection}{See Also}{19}%
\contentsline {subsection}{Further Reading}{19}%
\contentsline {section}{Binary Literals\hspace *{1em}(Long Title)}{20}%
\contentsline {subsection}{Description}{20}%
\contentsline {subsection}{Use Cases}{21}%
\contentsline {subsubsection}{Bit masking and bitwise operations}{21}%
\contentsline {subsubsection}{Replicating constant binary data}{22}%
\contentsline {subsection}{Potential Pitfalls}{23}%
\contentsline {subsection}{Annoyances}{23}%
\contentsline {subsection}{See Also}{24}%
\contentsline {subsection}{Further Reading}{24}%
\contentsline {section}{Adjacent {\tt >}s\hspace *{1em}(Consecutive Right Angle Brackets)}{25}%
\contentsline {subsection}{Description}{25}%
\contentsline {subsubsection}{Using the greater-than or right-shift operators within template-argument expressions}{25}%
\contentsline {subsection}{Use Cases}{26}%
\contentsline {subsubsection}{Avoiding annoying whitespace when composing template types}{26}%
\contentsline {subsection}{Potential pitfalls}{26}%
\contentsline {subsubsection}{Some C++03 programs may stop compiling in C++11}{26}%
\contentsline {subsubsection}{The meaning of a C++03 program can (in theory) silently change in C++11}{26}%
\contentsline {subsection}{Annoyances}{27}%
\contentsline {subsection}{See Also}{28}%
\contentsline {subsection}{Further Reading}{28}%
\contentsline {section}{{\tt decltype}\hspace *{1em}(Long Title)}{29}%
\contentsline {subsection}{Description}{29}%
\contentsline {subsubsection}{Use with (typically named) entities}{29}%
\contentsline {subsubsection}{Use with (unnamed) expressions}{29}%
\contentsline {subsection}{Use Cases}{30}%
\contentsline {subsubsection}{Avoiding unnecessary use of explicit typenames}{30}%
\contentsline {subsubsection}{Expressing type-consistency explicitly}{30}%
\contentsline {subsubsection}{Creating an auxiliary variable of generic type}{31}%
\contentsline {subsubsection}{Determining the validity of a generic expression}{32}%
\contentsline {subsection}{Potential pitfalls}{33}%
\contentsline {subsection}{Annoyances}{33}%
\contentsline {subsection}{See Also}{34}%
\contentsline {subsection}{Further reading}{34}%
\contentsline {section}{Deleted Functions\hspace *{1em}(Long Title)}{35}%
\contentsline {subsection}{Description}{35}%
\contentsline {subsection}{Use Cases}{35}%
\contentsline {subsubsection}{Suppressing special member function generation}{35}%
\contentsline {subsubsection}{Preventing a particular implicit conversion}{36}%
\contentsline {subsubsection}{Preventing all implicit conversions}{37}%
\contentsline {subsubsection}{Hiding a structural (nonpolymorphic) base class's member function}{38}%
\contentsline {subsection}{Potential Pitfalls}{39}%
\contentsline {subsection}{Annoyances}{39}%
\contentsline {subsection}{See Also}{39}%
\contentsline {subsection}{Further Reading}{39}%
\contentsline {section}{{\tt override}\hspace *{1em}(Long Title)}{40}%
\contentsline {subsection}{Description}{40}%
\contentsline {subsection}{Use Cases}{40}%
\contentsline {subsubsection}{Ensuring that a member function of a base class is being overridden}{40}%
\contentsline {subsection}{Potential Pitfalls}{41}%
\contentsline {subsubsection}{Lack of consistency across a code base}{41}%
\contentsline {subsection}{Annoyances}{42}%
\contentsline {subsection}{See Also}{42}%
\contentsline {subsection}{Further Reading}{42}%
\contentsline {section}{{\tt static\_assert}\hspace *{1em}(Compile-Time Assertions)}{43}%
\contentsline {subsection}{Description}{43}%
\contentsline {subsubsection}{Syntax and semantics}{43}%
\contentsline {subsubsection}{Evaluation of static assertions in templates}{44}%
\contentsline {subsection}{Use Cases}{46}%
\contentsline {subsubsection}{Verifying assumptions about the target platform}{46}%
\contentsline {subsubsection}{Preventing misuse of class and function templates}{46}%
\contentsline {subsection}{Potential Pitfalls}{47}%
\contentsline {subsubsection}{Static assertions in templates can trigger unintended compilation failures}{47}%
\contentsline {subsubsection}{Misuse of static assertions to restrict overload sets}{49}%
\contentsline {subsection}{Annoyances}{50}%
\contentsline {subsubsection}{Mandatory string literal}{50}%
\contentsline {subsection}{See Also}{50}%
\contentsline {subsection}{Further reading}{51}%
\contentsline {section}{Short Title\hspace *{1em}(Trailing Function Return Types)}{52}%
\contentsline {subsection}{Description}{52}%
\contentsline {subsection}{Use Cases}{54}%
\contentsline {subsubsection}{Function template whose return type depends on a parameter type}{54}%
\contentsline {subsubsection}{Avoiding having to qualify names redundantly in return types}{54}%
\contentsline {subsubsection}{Improving readability of declarations involving function pointers}{55}%
\contentsline {subsection}{Potential Pitfalls}{55}%
\contentsline {subsection}{Annoyances}{55}%
\contentsline {subsection}{See Also}{55}%
\contentsline {subsection}{Further Reading}{56}%
\contentsline {section}{Unrestricted Unions\hspace *{1em}(Long Title)}{57}%
\contentsline {subsection}{Description}{57}%
\contentsline {subsection}{Use Cases}{60}%
\contentsline {subsubsection}{Implementing a \textbf {sum type} as a discriminating (or tagged) \tt {union}}{60}%
\contentsline {subsection}{Potential Pitfalls}{63}%
\contentsline {subsubsection}{Inadvertent misuse can lead to latent \textbf {undefined behavior} at runtime}{63}%
\contentsline {subsection}{Annoyances}{63}%
\contentsline {subsection}{See Also}{63}%
\contentsline {subsection}{Further Reading}{63}%
\contentsline {section}{{\tt [[noreturn]]}\hspace *{1em}(The {\tt [[noreturn]]} Attribute)}{64}%
\contentsline {subsection}{Description}{64}%
\contentsline {subsection}{Use Cases}{64}%
\contentsline {subsubsection}{Better compiler diagnostics}{64}%
\contentsline {subsubsection}{Improved runtime performance}{65}%
\contentsline {subsection}{Potential Pitfalls}{66}%
\contentsline {subsubsection}{\tt {[[noreturn]]} can inadvertently break an otherwise working program}{66}%
\contentsline {subsubsection}{Misuse of {\tt [[noreturn]]} on function pointers}{66}%
\contentsline {subsection}{Annoyances}{67}%
\contentsline {subsection}{See Also}{67}%
\contentsline {subsection}{Further Reading}{67}%
\contentsline {section}{\tt {alignas}}{68}%
\contentsline {subsection}{Description}{68}%
\contentsline {subsubsection}{Restricting the alignment of a particular object}{68}%
\contentsline {subsubsection}{Restricting the alignment of a user-defined type}{69}%
\contentsline {subsubsection}{Restricting the alignment of individual data members}{70}%
\contentsline {subsubsection}{Matching the alignment of another type}{71}%
\contentsline {subsection}{Use Cases}{71}%
\contentsline {subsubsection}{Creating a sufficiently aligned object buffer}{71}%
\contentsline {subsubsection}{Ensuring proper alignment for architecture-specific instructions}{72}%
\contentsline {subsubsection}{Avoiding \textbf {false sharing} among distinct objects in a multi-threaded program}{73}%
\contentsline {subsubsection}{Avoiding \textbf {false sharing} within a single thread-aware object}{74}%
\contentsline {subsection}{Potential Pitfalls}{75}%
\contentsline {subsubsection}{Underspecifying alignment is not universally reported}{75}%
\contentsline {subsubsection}{Incompatibly specifying alignment is \textbf {IFNDR}}{75}%
\contentsline {subsubsection}{Stricter alignment might reduce cache utilization}{76}%
\contentsline {subsection}{See Also}{76}%
\contentsline {subsection}{Further Reading}{76}%
\contentsline {subsection}{Appendix}{77}%
\contentsline {subsubsection}{Natural Alignment}{77}%
\contentsline {subsubsection}{Cache lines; L1, L2, and L3 cache; pages; and virtual memory}{78}%
\contentsline {section}{\tt [[deprecated]]}{81}%
\contentsline {subsection}{Description}{81}%
\contentsline {subsection}{Use Cases}{83}%
\contentsline {subsubsection}{Discouraging use of an obsolete or unsafe \textbf {entity}}{83}%
\contentsline {subsection}{Potential Pitfalls}{84}%
\contentsline {subsubsection}{Interaction with {\tt -Werror} (e.g., GCC, Clang) or {\tt /WX} (MSVC)}{84}%
\contentsline {subsection}{Annoyances}{84}%
\contentsline {subsection}{See Also}{84}%
\contentsline {subsection}{Further Reading}{85}%
\renewcommand *\cftsecindent {1.25em}
\contentsline {section}{\numberline {1.2}C++11}{85}
\renewcommand *\cftsecindent {4.5em}
\contentsline {section}{Short Title\hspace *{1em}(Long Title)}{86}%
\contentsline {subsection}{Description}{86}%
\contentsline {subsubsection}{C++ attribute syntax}{86}%
\contentsline {subsection}{Appendix to the Feature}{87}%
\contentsline {chapter}{\numberline {Chapter\nobreakspace {}2}{Conditionally Safe Features}}{89}%
\renewcommand *\cftsecindent {1.25em}
\contentsline {section}{\numberline {2.1}C++11}{89}
\renewcommand *\cftsecindent {4.5em}
\contentsline {section}{\tt auto}{90}%
\contentsline {section}{Braced Initialization}{91}%
\contentsline {section}{Rvalue References}{92}%
\contentsline {section}{Default Member Initializers\hspace *{1em}(Long Title)}{93}%
\contentsline {section}{{\ttfamily constexpr} Variables}{94}%
\contentsline {section}{{\ttfamily constexpr} Functions}{95}%
\contentsline {section}{Variadic Templates}{96}%
\contentsline {section}{Lambdas}{97}%
\contentsline {section}{Forwarding References}{98}%
\renewcommand *\cftsecindent {1.25em}
\contentsline {section}{\numberline {2.2}C++14}{98}
\contentsline {section}{Generic Lambdas}{99}%
\renewcommand *\cftsecindent {4.5em}
\contentsline {section}{Short Title\hspace *{1em}(Long Title)}{100}%
\contentsline {chapter}{\numberline {Chapter\nobreakspace {}3}{Unsafe Features}}{103}%
\renewcommand *\cftsecindent {1.25em}
\contentsline {section}{\numberline {3.1}C++11}{103}
\renewcommand *\cftsecindent {4.5em}
\contentsline {section}{{\tt [[carries\_dependency]]}\hspace *{1em}(The {\tt [[carries\_dependency]]} Attribute)}{104}%
\renewcommand *\cftsecindent {1.25em}
\contentsline {section}{\numberline {3.2}C++14}{105}
\renewcommand *\cftsecindent {4.5em}
\contentsline {section}{Deduced Return Types\hspace *{1em}(Function Return Type Deduction)}{106}%
\contentsline {chapter}{\numberline {Chapter\nobreakspace {}4}{Parting Thoughts}}{107}%
\renewcommand *\cftsecindent {1.25em}
\contentsline {section}{Testing Section}{107}%
\contentsline {section}{Testing Another Section}{107}%
\contentsline {chapter}{{Bibliography}}{109}%
\contentsline {chapter}{{Glossary}}{115}%
\contentsline {chapter}{Index}{129}%
