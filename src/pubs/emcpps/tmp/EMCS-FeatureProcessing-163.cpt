The same Clang 10.0.0 compiler discussed in the previous footnote failed to compile \texttt{fib11(28)}:

\begin{lstlisting}[language=C++, basicstyle={\ttfamily\footnotesize}]
error: static_assert expression is not an integral constant expression
    static_assert(fib11(28) == 317811, "");
                  ^~~~~~~~~~~~~~~~~~~

note: constexpr evaluation hit maximum step limit; possible infinite loop?
\end{lstlisting}

\noindent GCC 10.x fails at \texttt{fib(36)}, with a similar diagnostic:

\begin{lstlisting}[language=C++, basicstyle={\ttfamily\footnotesize}]
error: 'constexpr' evaluation operation count exceeds limit of 33554432
       (use '-fconstexpr-ops-limit=' to increase the limit)
\end{lstlisting}

\noindent Clang 10.x fails to compile any attempt at constant evaluating \texttt{fib(28)}, with the following diagnostic message:

\begin{lstlisting}[language=C++, basicstyle={\ttfamily\footnotesize}]
note: constexpr evaluation hit maximum step limit; possible infinite loop?
\end{lstlisting}
^^E^^L 
