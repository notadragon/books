\textbf{lakos20},
  section 0.5, pp 34-42

  \begin{lstlisting}[language=C++, basicstyle={\ttfamily\footnotesize}]
  template <typename Range>
  auto sortRangeImpl(Range& range, int) -> decltype(range.sort(), void());
      // The comma operator is used to force the return type to (*{\textcolor{blue}{void}}*),
      // regardless of the return type of (*{\textcolor{blue}{range.sort()}}*).

  template <typename Range, typename = decltype(std::declval<Range&>().sort()>
  auto sortRangeImpl(Range& range, int);
      // (*{\textcolor{blue}{std::declval}}*) is used to generate a reference to (*{\textcolor{blue}{Range}}*) that can be
      // used in an unevaluated expression
  \end{lstlisting}
      ^^E^^L 
